name: Build Windows

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
      - name: Checkout repository (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Python (for embedding script and native deps)
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Workaround node-gyp python path (symlink)
        shell: pwsh
        run: |
          $py = "${{ steps.setup-python.outputs.python-path }}"
          New-Item -ItemType Directory -Force -Path 'C:\usr\bin' | Out-Null
          New-Item -ItemType SymbolicLink -Path 'C:\usr\bin\python' -Target $py -Force

      - name: Set PYTHON env variable for native builds
        run: echo "PYTHON=${{ steps.setup-python.outputs.python-path }}" >> $GITHUB_ENV

      - name: Add Python to PATH
        run: echo "PATH=$(dirname '${{ steps.setup-python.outputs.python-path }}'):$PATH" >> $GITHUB_ENV

      - name: Install dependencies (npm) - no rebuild
        run: npm install --ignore-scripts

      - name: Setup Python embedded (download, extract, pip, requirements)
        run: node scripts/embed-python-win.js

      - name: Build Electron app (no rebuild)
        run: npm run build
        env:
          ELECTRON_REBUILD: false
          npm_config_rebuild: false
          PYTHON: ${{ env.PYTHON }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: scripta-image-processing-win
          path: dist/*.exe
