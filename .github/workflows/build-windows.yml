name: Build Windows

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repository (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Python (for embedding script only)
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies (npm) - force no rebuild
        run: npm install --ignore-scripts

      - name: Setup Python embedded (download, extract, pip, requirements)
        run: node scripts/embed-python-win.js

      - name: Create symlink as fallback
        run: |
          New-Item -ItemType Directory -Path "C:\usr\bin" -Force
          New-Item -ItemType SymbolicLink -Path "C:\usr\bin\python.exe" -Target "${{ github.workspace }}\src\python-embed\python.exe" -Force

      - name: Build Electron app (Windows) - use embedded Python
        run: npx electron-builder --win --x64
        env:
          PYTHON: ${{ github.workspace }}\src\python-embed\python.exe
          npm_config_node_gyp: ""
          ELECTRON_REBUILD: false
          npm_config_rebuild: false
          npm_config_cache_lock_stale: 60000
          # Forza electron-builder a non cercare Python in paths standard
          npm_config_python: ${{ github.workspace }}\src\python-embed\python.exe
          SETUPTOOLS_SCM_PRETEND_VERSION: "1.0.0"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: scripta-image-processing-win
          path: dist/*.exe